<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 控制台打印日志的相关配置 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 日志格式 -->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%level] %line-- %m%n</pattern>
        </encoder>
        <!-- 日志级别过滤器 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>info</level>
            <!-- 匹配时的操作：接收（记录） -->
            <!-- 			<onMatch>ACCEPT</onMatch> -->
            <!-- 不匹配时的操作：拒绝（不记录）DENY -->
            <!-- 			<onMismatch>ACCEPT</onMismatch> -->

        </filter>
    </appender>


    <!-- 文件保存日志的相关配置 -->
    <appender name="INFO-OUT"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 保存日志文件的路径 -->
        <file>${LOG_PATH}/all.log</file>
        <!-- 日志格式 -->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%class:%line] -- %m%n</pattern>
        </encoder>
        <!-- 日志级别过滤器 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>info</level>
            <!-- 匹配时的操作：接收（记录） -->
            <!-- 			<onMatch>ACCEPT</onMatch> -->
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <!-- 			<onMismatch>DENY</onMismatch> -->
        </filter>
        <!-- 循环政策：基于时间创建日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>${LOG_PATH}/log_%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 最大保存时间：30天 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>


    <!-- 基于dubug处理日志：具体控制台或者文件对日志级别的处理还要看所在appender配置的filter，如果没有配置filter，则使用root配置 -->
    <root level="info">
        <appender-ref ref="STDOUT"/>    <!-- 启动上面配置 STDOUT 控制台 -->
        <appender-ref ref="INFO-OUT"/>    <!--启动上面配置 INFO-OUT 保存文件形式-->
    </root>
</configuration>